{"version":3,"sources":["reducers/index.js","actions/index.js","components/Video/Video.js","components/ChannelDrawer/ChannelDrawer.js","App.js","index.js"],"names":["initialState","rootReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","channel","video","channels","getChannelId","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","channelResponse","wrap","_context","prev","next","fetch","concat","sent","json","setChannelId","stop","this","_x","apply","getChannels","_ref2","_callee2","channelsResponse","_context2","setChannels","randomChoice","_x2","array","Math","floor","random","Video","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","init","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onPlayerReady","title","setVideo","player","playVideo","onPlayerStateChange","e","data","YT","PlayerState","ENDED","index","videoIndexToPlay","videos","loadVideoById","videoId","stopVideo","findStartVideoAndTime","vidDuration","startPlaylistTime","Date","getTime","totalDuration","timeIntoPlaylist","i","moment","duration","startTime","loadNewChannel","_this$findStartVideoA","startSeconds","_this$findStartVideoA2","window","Player","playerVars","start","controls","iv_load_policy","modestbranding","width","height","events","onStateChange","onReady","inherits","createClass","key","value","classes","react_default","react","id","className","Component","connect","withStyles","theme","ChannelDrawer","handleClick","setState","drawerOpen","toggleDrawer","setChannel","prevChannel","channelId","randomChannel","_this2","sideList","index_es","map","button","onClick","primary","toUpperCase","listTitles","container","justify","alignItems","item","xs","sm","menuIconButton","disableRipple","Menu_default","icon","iconButton","Undo_default","disabled","Casino_default","variant","component","href","channelTitle","anchor","open","paper","onClose","tabIndex","role","marginLeft","marginRight","color","opacity","&:hover","backgroundColor","fontSize","defineProperty","float","display","paddingTop","paddingRight","textDecoration","breakpoints","down","marginBottom","background","createMuiTheme","typography","fontFamily","useNextVariants","App","core_styles","components_ChannelDrawer_ChannelDrawer","components_Video_Video","drawer","textAlign","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.d724d518.chunk.js","sourcesContent":["const initialState = {}\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_CHANNEL_ID':\n        console.log(\"action \", action)\n            return {\n                ...state, \n                channel: action.channel,\n            }\n        case 'SET_VIDEO':\n            return {\n                ...state, \n                video: action.video\n            }\n        case 'SET_CHANNELS':\n            return {\n                ...state,\n                channels: action.channels\n            }\n\n        default:\n        return (state)\n    }\n}\n\nexport default rootReducer\n  ","export const getChannelId = (channel) => {\n    return async (dispatch) => {\n        console.log(\"CHANNEL \", channel)\n        const response = await fetch(`/api/channels/${channel}`)\n        const channelResponse = await response.json()\n        dispatch(setChannelId(channelResponse))\n    }\n}\n\nexport const setChannelId = (channel) => ({\n    type: 'SET_CHANNEL_ID',\n    channel\n})\n\nexport const setVideo = (video) => ({\n    type: 'SET_VIDEO',\n    video\n})\n\nexport const getChannels = () => {\n    return async (dispatch) => {\n        const response = await fetch(`/api/channels/`)\n        const channelsResponse = await response.json()\n        dispatch(setChannels(channelsResponse))\n        dispatch(getChannelId(randomChoice(channelsResponse)[1]))\n    }\n}\n\nexport const setChannels = (channels) => ({\n    type: 'SET_CHANNELS',\n    channels\n})\n\nconst randomChoice = (array) => {\n    const index = Math.floor(Math.random() * array.length)\n    const item = array[index]\n    return item\n}","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nimport { setVideo } from '../../actions/index'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    video: {\n      width: '100%',\n    //   paddingTop: '13px'\n    }\n})\n\nexport class Video extends Component {\n    constructor(props) {\n        super(props)\n        this.init()\n        this.index = 1\n        const {startTime, videoIndexToPlay} = this.findStartVideoAndTime(this.props.channel)\n        this.videoIndexToPlay = videoIndexToPlay\n        window['onYouTubeIframeAPIReady'] = (e) => {\n            this.YT = window['YT']\n            this.player = new window['YT'].Player('player', {\n                videoId: this.props.channel.videos[this.videoIndexToPlay].videoId,\n                playerVars: {\n                    start: startTime, \n                    controls:1, \n                    iv_load_policy:3, \n                    modestbranding:1\n                },\n                width: 1088,\n                height: 663,\n                events: {\n                'onStateChange': this.onPlayerStateChange,\n                'onReady': () => this.onPlayerReady(this.props.channel.videos[this.videoIndexToPlay])\n                }\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        this.loadNewChannel()\n    }\n\n    init = () => {\n        var tag = document.createElement('script')\n        tag.src = 'https://www.youtube.com/iframe_api'\n        var firstScriptTag = document.getElementsByTagName('script')[0]\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\n    }\n\n    onPlayerReady = (title) => {\n        this.props.setVideo(title)\n        this.player.playVideo()\n    }\n\n    onPlayerStateChange = (e) => {\n        // let done = false\n        // if (e.data === this.YT.PlayerState.PLAYING && !done) {\n        //     setTimeout(this.stopVideo, 1000);\n        //     done = true;\n        // }\n        if (e.data === this.YT.PlayerState.ENDED) {    \n            if (this.index+this.videoIndexToPlay === this.props.channel.videos.length) {\n                this.index = 0\n                this.videoIndexToPlay = 0\n            } \n            this.player.loadVideoById({\n                videoId:this.props.channel.videos[this.videoIndexToPlay+this.index].videoId\n                \n            })\n            this.index++\n        }\n    }\n\n    stopVideo = () => {\n        this.player.stopVideo()\n    }\n\n    findStartVideoAndTime = (channel) => {\n        const currentTime = Math.floor(new Date().getTime()/1000)\n        const startPlaylistTime = currentTime % channel.totalDuration\n        let timeIntoPlaylist = 0\n        let i = 0\n        let vidDuration\n        while (timeIntoPlaylist <= startPlaylistTime) {\n            vidDuration = moment.duration(channel.videos[i].duration)/1000\n            timeIntoPlaylist += moment.duration(channel.videos[i].duration)/1000\n            i++\n        }\n        timeIntoPlaylist -= vidDuration\n        const startTime = startPlaylistTime - timeIntoPlaylist\n        const videoIndexToPlay = i-1\n        return {startTime, videoIndexToPlay}\n    }\n\n    loadNewChannel = () => {\n        const {startTime, videoIndexToPlay} = this.findStartVideoAndTime(this.props.channel)\n        this.videoIndexToPlay = videoIndexToPlay\n        this.index = 1\n        this.props.setVideo(this.props.channel.videos[videoIndexToPlay])\n\n        this.player.loadVideoById({\n            videoId:this.props.channel.videos[this.videoIndexToPlay].videoId,\n            startSeconds: startTime\n        })\n    }\n\n    render() {     \n        const { classes } = this.props\n        return (\n            <Fragment >\n                <div id=\"player\" className={classes.video}></div>\n            </Fragment>\n        )\n    }    \n}\n\nconst mapStateToProps = state => ({\n    channels: state.channels, \n    channel: state.channel\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setVideo: (video) => dispatch(setVideo(video))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Video))","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n    IconButton, \n    List,\n    ListItem,\n    ListItemText,\n    Drawer,\n    Grid,\n    Typography\n} from '@material-ui/core'\n\nimport Menu from '@material-ui/icons/Menu'\nimport Casino from '@material-ui/icons/Casino'\nimport Undo from '@material-ui/icons/Undo'\n\nimport { getChannelId, getChannels } from '../../actions/index'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    menuIconButton: {\n        marginLeft: 12,\n        marginRight: 28,\n        color: 'white',\n        opacity: 0.6,\n        \"&:hover\": {\n            backgroundColor: \"transparent\"\n        }\n    },\n    iconButton: {\n        color: 'white',\n        opacity: 0.6,\n        \"&:hover\": {\n            backgroundColor: \"transparent\"\n        }\n    },\n    icon: {\n        fontSize: 36,\n    },\n    title: {\n        float: 'right',\n        display: 'inline',\n        paddingTop: 1,\n        paddingRight: 55,\n        fontSize: 36,\n        color: 'white',\n        textDecoration:'none',\n        opacity: 0.6,\n        [theme.breakpoints.down('xs')]: {\n            marginLeft: 24,\n            marginBottom: 24,\n        },\n    },\n    paper: {\n        background: '#111111',\n        opacity: 0.8,\n        width: 340\n    },\n    listTitles: {\n        color: 'white',\n        opacity: 0.7,\n        fontSize: 23,\n    },\n})\n\nexport class ChannelDrawer extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {drawerOpen: false, prevChannel: undefined}\n    }\n\n    handleClick = () => {\n        this.setState({drawerOpen: true})\n    }\n\n    toggleDrawer = () => {\n        this.setState({drawerOpen: false})\n    }\n    \n    randomChoice = (array) => {\n        const index = Math.floor(Math.random() * array.length)\n        const item = array[index]\n        return item\n    }\n\n    setChannel = (channel, type) => {\n        if (type === 'normal') {\n            this.setState({prevChannel: this.props.channel.channelId})\n            console.log(\"CA \", channel)\n            this.props.getChannelId(channel)\n        } else if (type === 'random') {\n            const randomChannel = this.randomChoice(this.props.channels)[1]\n            this.setState({prevChannel: this.props.channel.channelId})\n            this.props.getChannelId(randomChannel)\n        } else if (type === 'previous') {\n            this.setState({prevChannel: this.props.channel.channelId})\n            this.props.getChannelId(this.state.prevChannel)\n        }\n    }\n\n    render() {\n        const { classes } = this.props\n\n        const sideList = (\n            <Fragment>\n                <List>\n                    {this.props.channels.map((channel) => (\n                    <ListItem button key={channel[1]} onClick={() => this.setChannel(channel[1], 'normal')}>\n                        <ListItemText primary={channel[0].toUpperCase()} classes={{primary: classes.listTitles}} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Fragment>\n        )\n        return (\n            <Fragment>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                    <Grid item xs={12} sm={6}>\n                        <IconButton className={classes.menuIconButton} onClick={() => this.handleClick()} disableRipple={true}>\n                            <Menu className={classes.icon}/>\n                        </IconButton>\n                        {this.state.prevChannel ? \n                            <IconButton className={classes.iconButton} onClick={() => this.setChannel(null, 'previous')} disableRipple={true}>\n                                <Undo className={classes.icon}/>\n                            </IconButton>\n                            :\n                            <IconButton className={classes.iconButton} disabled={true} disableRipple={true}>\n                                <Undo className={classes.icon}/>\n                            </IconButton>\n                        }\n                        <IconButton className={classes.iconButton} onClick={() => this.setChannel(null, 'random')} disableRipple={true} >\n                            <Casino className={classes.icon}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h4\" component=\"a\" href={`https://www.youtube.com/channel/${this.props.channel.channelId}`} className={classes.title}>\n                            {this.props.channel.channelTitle.toUpperCase()}\n                        </Typography>\n                        {/* {this.props.video ? \n                        <Typography variant=\"subtitle1\" component=\"a\" href={`https://www.youtube.com/watch?v=${this.props.video.videoId}`} className={classes.subtitle}>\n                            {this.props.video.title}\n                        </Typography>\n                        : ''} */}\n                    </Grid>\n                </Grid>\n                \n                <Drawer \n                    anchor=\"left\" \n                    open={this.state.drawerOpen} \n                    classes={{paper: classes.paper}}\n                    onClose={() => this.toggleDrawer()}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        onClick={() => this.toggleDrawer()}\n                        \n                    >\n                        {sideList}\n                    </div>\n                </Drawer>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n  channels: state.channels,\n  channel: state.channel,\n  video: state.video\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getChannelId: (channel) => dispatch(getChannelId(channel)),\n    getChannels: () => dispatch(getChannels())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ChannelDrawer))\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\n\nimport './App.css';\nimport Video from './components/Video/Video'\nimport ChannelDrawer from './components/ChannelDrawer/ChannelDrawer'\nimport { withStyles } from '@material-ui/core/styles'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nimport { getChannels } from './actions/index'\n\nconst theme = createMuiTheme({\n  typography: { fontFamily: \"'Questrial', sans-serif\", useNextVariants: true }\n})\n\nconst styles = theme => ({\n  drawer: {\n    textAlign: 'left'\n  },\n})\n\nexport class App extends Component {\n  constructor(props) {\n      super(props)\n\n  }\n\n  componentDidMount() {\n    this.props.getChannels()\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n            {this.props.channel ? \n            <Fragment>\n              <ChannelDrawer />\n              <Video />\n            </Fragment>\n            : <Fragment></Fragment>\n          }\n        </div>\n      </MuiThemeProvider>\n  )};\n}\n\nconst mapStateToProps = state => ({\n  channel: state.channel,\n  channels: state.channels,\n  channelId: state.channelId,\n  video: state.video\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getChannels: () => dispatch(getChannels())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(App))\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/index'\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}